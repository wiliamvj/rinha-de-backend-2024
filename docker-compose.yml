version: '3.9'

services:
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    restart: always
#    deploy:
#      resources:
#        limits:
#          cpus: '0.1'
#          memory: '50MB'
    networks:
      - app-network

  api1: &api
    build:
      context: .
      dockerfile: Dockerfile
    hostname: api1
    restart: always
    environment:
      DB_HOST: postgres
      DB_PASSWORD: rinha_pass
      DB_USER: rinha_user
      DB_NAME: rinha_db
      DB_PORT: 5432
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
#    deploy:
#      resources:
#        limits:
#          cpus: '0.2'
#          memory: '80MB'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  api2:
    <<: *api
    hostname: api2

  postgres:
    image: postgres:alpine
    hostname: postgres
    environment:
      POSTGRES_PASSWORD: rinha_pass
      POSTGRES_USER: rinha_user
      POSTGRES_DB: rinha_db
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: 'postgres -c max_connections=1000 -c shared_buffers=128MB -c synchronous_commit=off -c fsync=off -c full_page_writes=off'
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U rinha_user -d rinha_db'"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
#    deploy:
#      resources:
#        limits:
#          cpus: '0.7'
#          memory: '260MB'
    networks:
      - app-network

networks:
  app-network: